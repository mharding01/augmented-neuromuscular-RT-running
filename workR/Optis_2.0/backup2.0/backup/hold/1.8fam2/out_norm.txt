fitness: 1548.47312995991

norms:
0.239887579390307
0.282209245178576
0.250286238534348
0.929615377463006
0.259158639892842
0.0746475298226917
0.717835550219456
0.468883470578142
0.122265491914386


/*
 * The following lines present the results file with the normalized parameters.
 * Do not use it directly, its purpose is just to show the match between the parameters
 * to optimize and their normalized optimized values.
 */

#include "OptiNorms.hh"
#include "StimWangCtrl.hh"
#include "JointsInit.hh"
#include "MatsuokaSixN.hh"

/*! \brief constructor
 */
OptiNorms::OptiNorms()
{

}

/*! \brief destructor
 */
OptiNorms::~OptiNorms()
{

}

/*! \brief set optimization parameters
 */
void OptiNorms::set_opti()
{
    StimWangCtrl *stim_wang = static_cast<StimWangCtrl*>(stim_ctrl);
    MatsuokaSixN *g_osc = static_cast<MatsuokaSixN*>(stim_wang->get_ghost_osc());

    // Uses "opti_set" function family in order to delay setting these params
    // until after Ctrl construction
    g_osc->opti_set_P_tau(0.23988758 ); // Taken from master commit: "All_1 results, 1459 score"
	// HIP CONTROL
	g_osc->opti_set_P_theta_trunk( 0.28220925 ); // TODO: trunk lean 
	g_osc->opti_set_P_theta_hip( 0.25028624 ); // TODO: made its lower bound smaller, come back to this later
    
	// CPG CONTROL
    g_osc->opti_set_k_HFLrun1( 0.92961538);
    g_osc->opti_set_k_HFLrun2( 0.25915864);
    g_osc->opti_set_k_HAMrun( 0.07464753);

	// ANKLE CONTROL
	g_osc->opti_set_P_G_SOL( 0.71783555 );	// TODO: Original bounds
	g_osc->opti_set_P_G_SOL_TA( 0.46888347 );// Prevent tripping
	g_osc->opti_set_P_G_GAS( 0.12226549 );
}
