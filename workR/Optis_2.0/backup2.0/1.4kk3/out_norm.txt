fitness: 2187.78295249502

norms:
0.287223289465403
0.402787103996005
0.00400047670777324
0.875596471613246
0.406795471945202
0.177740739320082
0.62815281857006
0.497414674287467
0.953002430005073
0.00180829744389087
0.511996266363797


/*
 * The following lines present the results file with the normalized parameters.
 * Do not use it directly, its purpose is just to show the match between the parameters
 * to optimize and their normalized optimized values.
 */

#include "OptiNorms.hh"
#include "StimWangCtrl.hh"
#include "JointsInit.hh"
#include "MatsuokaSixN.hh"

/*! \brief constructor
 */
OptiNorms::OptiNorms()
{

}

/*! \brief destructor
 */
OptiNorms::~OptiNorms()
{

}

/*! \brief set optimization parameters
 */
void OptiNorms::set_opti()
{
    StimWangCtrl *stim_wang = static_cast<StimWangCtrl*>(stim_ctrl);
    MatsuokaSixN *g_osc = static_cast<MatsuokaSixN*>(stim_wang->get_ghost_osc());

    // Uses "opti_set" function family in order to delay setting these params
    // until after Ctrl construction
    g_osc->opti_set_P_tau(0.28722329 ); // Taken from master commit: "All_1 results, 1459 score"
	// HIP CONTROL
	g_osc->opti_set_P_theta_trunk( 0.40278710 ); // TODO: trunk lean 
	g_osc->opti_set_P_theta_hip( 0.00400048 ); // TODO: made its lower bound smaller, come back to this later
    
	// CPG CONTROL
    g_osc->opti_set_k_HFLrun1( 0.87559647);	// Higher bound
    g_osc->opti_set_k_HFLrun2( 0.40679547);	// Higher bound
    g_osc->opti_set_k_HAMrun( 0.17774074);

	// ANKLE CONTROL
	g_osc->opti_set_P_G_SOL( 0.62815282 );	// Lower bounds
	g_osc->opti_set_P_G_SOL_TA( 0.49741467 );// Prevent tripping
	g_osc->opti_set_P_G_GAS( 0.95300243 );
	
	// KNEE CONTROL
	g_osc->opti_set_P_G_VAS( 0.00180830 );	// Shock absorption, v. thrust
	g_osc->opti_set_P_k_theta( 0.51199627);	// Prevent hyperextension
}
//energy: 8.7329 [J/(m*kg)]
//speed : 1.42804 [m/s]
//period: 0.475878 [s]
//length: 0.677374 [m]
//one leg stance phase: 31.5234 [%]
//double support: 0 [%]
//tot flight: 36.953 [%]

