fitness: 2126.77679541855

norms:
0.251858936419116
0.183978162317399
0.185216958623444
0.984482852232138
0.820213610816368
0.743537854200087
0.968442076077742
0.545390023378175
0.591005076616401
0.102842904297612
0.720181645968868


/*
 * The following lines present the results file with the normalized parameters.
 * Do not use it directly, its purpose is just to show the match between the parameters
 * to optimize and their normalized optimized values.
 */

#include "OptiNorms.hh"
#include "StimWangCtrl.hh"
#include "JointsInit.hh"
#include "MatsuokaSixN.hh"

/*! \brief constructor
 */
OptiNorms::OptiNorms()
{

}

/*! \brief destructor
 */
OptiNorms::~OptiNorms()
{

}

/*! \brief set optimization parameters
 */
void OptiNorms::set_opti()
{
    StimWangCtrl *stim_wang = static_cast<StimWangCtrl*>(stim_ctrl);
    MatsuokaSixN *g_osc = static_cast<MatsuokaSixN*>(stim_wang->get_ghost_osc());

    // Uses "opti_set" function family in order to delay setting these params
    // until after Ctrl construction
    g_osc->opti_set_P_tau(0.25185894 ); // Taken from master commit: "All_1 results, 1459 score"
	// HIP CONTROL
	g_osc->opti_set_P_theta_trunk( 0.18397816 ); // TODO: trunk lean 
	g_osc->opti_set_P_theta_hip( 0.18521696 ); // TODO: made its lower bound smaller, come back to this later
    
	// CPG CONTROL
    g_osc->opti_set_k_HFLrun1( 0.98448285);
    g_osc->opti_set_k_HFLrun2( 0.82021361);
    g_osc->opti_set_k_HAMrun( 0.74353785);

	// ANKLE CONTROL
	g_osc->opti_set_P_G_SOL( 0.96844208 );	// TODO: Original bounds
	g_osc->opti_set_P_G_SOL_TA( 0.54539002 );// Prevent tripping
	g_osc->opti_set_P_G_GAS( 0.59100508 );

	// KNEE CONTROL
	g_osc->opti_set_P_G_VAS( 0.10284290 );	// Shock absorption, v. thrust
	g_osc->opti_set_P_k_theta( 0.72018165);	// Prevent hyperextension
}
