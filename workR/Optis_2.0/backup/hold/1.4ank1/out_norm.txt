fitness: 2738.63726914663

norms:
0.274260100013955
0.266580787719176
0.14258009181862
0.904028867102655
0.762384727333924
0.880515785527092
0.823658626826989
0.132591321998372
0.600965783798436


/*
 * The following lines present the results file with the normalized parameters.
 * Do not use it directly, its purpose is just to show the match between the parameters
 * to optimize and their normalized optimized values.
 */

#include "OptiNorms.hh"
#include "StimWangCtrl.hh"
#include "JointsInit.hh"
#include "MatsuokaSixN.hh"

/*! \brief constructor
 */
OptiNorms::OptiNorms()
{

}

/*! \brief destructor
 */
OptiNorms::~OptiNorms()
{

}

/*! \brief set optimization parameters
 */
void OptiNorms::set_opti()
{
    StimWangCtrl *stim_wang = static_cast<StimWangCtrl*>(stim_ctrl);
    MatsuokaSixN *g_osc = static_cast<MatsuokaSixN*>(stim_wang->get_ghost_osc());

    // Uses "opti_set" function family in order to delay setting these params
    // until after Ctrl construction
    g_osc->opti_set_P_tau(0.27426010 ); // Taken from master commit: "All_1 results, 1459 score"
	// HIP CONTROL
	g_osc->opti_set_P_theta_trunk( 0.26658079 ); // TODO: trunk lean 
	g_osc->opti_set_P_theta_hip( 0.14258009 ); // TODO: made its lower bound smaller, come back to this later
    
	// CPG CONTROL
    g_osc->opti_set_k_HFLrun1( 0.90402887);
    g_osc->opti_set_k_HFLrun2( 0.76238473);
    g_osc->opti_set_k_HAMrun( 0.88051579);

	// ANKLE CONTROL
	g_osc->opti_set_P_G_SOL( 0.82365863 );	// TODO: Original bounds
	g_osc->opti_set_P_G_SOL_TA( 0.13259132 );// Prevent tripping
	g_osc->opti_set_P_G_GAS( 0.60096578 );
}
