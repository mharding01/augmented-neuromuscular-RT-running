fitness: 2238.67186976294

norms:
0.260858896801908
0.261192868142222
0.235347889373633
0.900126013315047
0.849595607010158
0.749188444165156
0.725863955241684
0.911040146318214
0.424722213381326
0.381695084173939
0.476886015833959


/*
 * The following lines present the results file with the normalized parameters.
 * Do not use it directly, its purpose is just to show the match between the parameters
 * to optimize and their normalized optimized values.
 */

#include "OptiNorms.hh"
#include "StimWangCtrl.hh"
#include "JointsInit.hh"
#include "MatsuokaSixN.hh"

/*! \brief constructor
 */
OptiNorms::OptiNorms()
{

}

/*! \brief destructor
 */
OptiNorms::~OptiNorms()
{

}

/*! \brief set optimization parameters
 */
void OptiNorms::set_opti()
{
    StimWangCtrl *stim_wang = static_cast<StimWangCtrl*>(stim_ctrl);
    MatsuokaSixN *g_osc = static_cast<MatsuokaSixN*>(stim_wang->get_ghost_osc());

    // Uses "opti_set" function family in order to delay setting these params
    // until after Ctrl construction
    g_osc->opti_set_P_tau(0.26085890 ); // Taken from master commit: "All_1 results, 1459 score"
	// HIP CONTROL
	g_osc->opti_set_P_theta_trunk( 0.26119287 ); // TODO: trunk lean 
	g_osc->opti_set_P_theta_hip( 0.23534789 ); // TODO: made its lower bound smaller, come back to this later
    
	// CPG CONTROL
    g_osc->opti_set_k_HFLrun1( 0.90012601);
    g_osc->opti_set_k_HFLrun2( 0.84959561);
    g_osc->opti_set_k_HAMrun( 0.74918844);

	// ANKLE CONTROL
	g_osc->opti_set_P_G_SOL( 0.72586396 );	// TODO: Original bounds
	g_osc->opti_set_P_G_SOL_TA( 0.91104015 );// Prevent tripping
	g_osc->opti_set_P_G_GAS( 0.42472221 );

	// KNEE CONTROL
	g_osc->opti_set_P_G_VAS( 0.38169508 );	// Shock absorption, v. thrust
	g_osc->opti_set_P_k_theta( 0.47688602);	// Prevent hyperextension
}
