fitness: 2266.02293578426

norms:
0.25844129922385
0.18195924145915
0.366373285415395
0.827517150417599
0.814478105685414
0.818046313788524
0.669105974983617
0.801935608440938
0.126569735784791
0.237403142925792
0.284229515192061


/*
 * The following lines present the results file with the normalized parameters.
 * Do not use it directly, its purpose is just to show the match between the parameters
 * to optimize and their normalized optimized values.
 */

#include "OptiNorms.hh"
#include "StimWangCtrl.hh"
#include "JointsInit.hh"
#include "MatsuokaSixN.hh"

/*! \brief constructor
 */
OptiNorms::OptiNorms()
{

}

/*! \brief destructor
 */
OptiNorms::~OptiNorms()
{

}

/*! \brief set optimization parameters
 */
void OptiNorms::set_opti()
{
    StimWangCtrl *stim_wang = static_cast<StimWangCtrl*>(stim_ctrl);
    MatsuokaSixN *g_osc = static_cast<MatsuokaSixN*>(stim_wang->get_ghost_osc());

    // Uses "opti_set" function family in order to delay setting these params
    // until after Ctrl construction
    g_osc->opti_set_P_tau(0.25844130 ); // Taken from master commit: "All_1 results, 1459 score"
	// HIP CONTROL
	g_osc->opti_set_P_theta_trunk( 0.18195924 ); // TODO: trunk lean 
	g_osc->opti_set_P_theta_hip( 0.36637329 ); // TODO: made its lower bound smaller, come back to this later
    
	// CPG CONTROL
    g_osc->opti_set_k_HFLrun1( 0.82751715);
    g_osc->opti_set_k_HFLrun2( 0.81447811);
    g_osc->opti_set_k_HAMrun( 0.81804631);

	// ANKLE CONTROL
	g_osc->opti_set_P_G_SOL( 0.66910597 );	// TODO: Original bounds
	g_osc->opti_set_P_G_SOL_TA( 0.80193561 );// Prevent tripping
	g_osc->opti_set_P_G_GAS( 0.12656974 );

	// KNEE CONTROL
	g_osc->opti_set_P_G_VAS( 0.23740314 );	// Shock absorption, v. thrust
	g_osc->opti_set_P_k_theta( 0.28422952);	// Prevent hyperextension
}
