fitness: 2060.88691049482

norms:
0.258665629145445
0.248626997926185
0.287252758855211
0.77545471736021
0.68883299680199
0.311329036294892
0.399989626242178
0.63104224214866
0.583045531895613
0.352065527478439
0.606057967940622


/*
 * The following lines present the results file with the normalized parameters.
 * Do not use it directly, its purpose is just to show the match between the parameters
 * to optimize and their normalized optimized values.
 */

#include "OptiNorms.hh"
#include "StimWangCtrl.hh"
#include "JointsInit.hh"
#include "MatsuokaSixN.hh"

/*! \brief constructor
 */
OptiNorms::OptiNorms()
{

}

/*! \brief destructor
 */
OptiNorms::~OptiNorms()
{

}

/*! \brief set optimization parameters
 */
void OptiNorms::set_opti()
{
    StimWangCtrl *stim_wang = static_cast<StimWangCtrl*>(stim_ctrl);
    MatsuokaSixN *g_osc = static_cast<MatsuokaSixN*>(stim_wang->get_ghost_osc());

    // Uses "opti_set" function family in order to delay setting these params
    // until after Ctrl construction
    g_osc->opti_set_P_tau(0.25866563 ); // Taken from master commit: "All_1 results, 1459 score"
	// HIP CONTROL
	g_osc->opti_set_P_theta_trunk( 0.24862700 ); // TODO: trunk lean 
	g_osc->opti_set_P_theta_hip( 0.28725276 ); // TODO: made its lower bound smaller, come back to this later
    
	// CPG CONTROL
    g_osc->opti_set_k_HFLrun1( 0.77545472);
    g_osc->opti_set_k_HFLrun2( 0.68883300);
    g_osc->opti_set_k_HAMrun( 0.31132904);

	// ANKLE CONTROL
	g_osc->opti_set_P_G_SOL( 0.39998963 );	// TODO: Original bounds
	g_osc->opti_set_P_G_SOL_TA( 0.63104224 );// Prevent tripping
	g_osc->opti_set_P_G_GAS( 0.58304553 );

	// KNEE CONTROL
	g_osc->opti_set_P_G_VAS( 0.35206553 );	// Shock absorption, v. thrust
	g_osc->opti_set_P_k_theta( 0.60605797);	// Prevent hyperextension
}
