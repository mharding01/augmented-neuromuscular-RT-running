fitness: 1736.14064055621

norms:
0.258390695417197
0.282566792839359
0.327177187129654
0.954763714825046
0.680985507897007
0.799376545778491
0.621271495093159
0.803801082340367
0.28977009982582
0.321767253562316
0.450686829850331


/*
 * The following lines present the results file with the normalized parameters.
 * Do not use it directly, its purpose is just to show the match between the parameters
 * to optimize and their normalized optimized values.
 */

#include "OptiNorms.hh"
#include "StimWangCtrl.hh"
#include "JointsInit.hh"
#include "MatsuokaSixN.hh"

/*! \brief constructor
 */
OptiNorms::OptiNorms()
{

}

/*! \brief destructor
 */
OptiNorms::~OptiNorms()
{

}

/*! \brief set optimization parameters
 */
void OptiNorms::set_opti()
{
    StimWangCtrl *stim_wang = static_cast<StimWangCtrl*>(stim_ctrl);
    MatsuokaSixN *g_osc = static_cast<MatsuokaSixN*>(stim_wang->get_ghost_osc());

    // Uses "opti_set" function family in order to delay setting these params
    // until after Ctrl construction
    g_osc->opti_set_P_tau(0.25839070 ); // Taken from master commit: "All_1 results, 1459 score"
	// HIP CONTROL
	g_osc->opti_set_P_theta_trunk( 0.28256679 ); // TODO: trunk lean 
	g_osc->opti_set_P_theta_hip( 0.32717719 ); // TODO: made its lower bound smaller, come back to this later
    
	// CPG CONTROL
    g_osc->opti_set_k_HFLrun1( 0.95476371);
    g_osc->opti_set_k_HFLrun2( 0.68098551);
    g_osc->opti_set_k_HAMrun( 0.79937655);

	// ANKLE CONTROL
	g_osc->opti_set_P_G_SOL( 0.62127150 );	// TODO: Original bounds
	g_osc->opti_set_P_G_SOL_TA( 0.80380108 );// Prevent tripping
	g_osc->opti_set_P_G_GAS( 0.28977010 );

	// KNEE CONTROL
	g_osc->opti_set_P_G_VAS( 0.32176725 );	// Shock absorption, v. thrust
	g_osc->opti_set_P_k_theta( 0.45068683);	// Prevent hyperextension
}
