fitness: 1560.60445653009

norms:
0.267418288174271
0.0705286581198536
0.0345713907298336
0.337268115515796
0.32053132347209
0.481533324596985
0.054907753849999
0.239470174456312
0.567333064225806


/*
 * The following lines present the results file with the normalized parameters.
 * Do not use it directly, its purpose is just to show the match between the parameters
 * to optimize and their normalized optimized values.
 */

#include "OptiNorms.hh"
#include "StimWangCtrl.hh"
#include "JointsInit.hh"
#include "MatsuokaSixN.hh"

/*! \brief constructor
 */
OptiNorms::OptiNorms()
{

}

/*! \brief destructor
 */
OptiNorms::~OptiNorms()
{

}

/*! \brief set optimization parameters
 */
void OptiNorms::set_opti()
{
    StimWangCtrl *stim_wang = static_cast<StimWangCtrl*>(stim_ctrl);
    MatsuokaSixN *g_osc = static_cast<MatsuokaSixN*>(stim_wang->get_ghost_osc());

    // Uses "opti_set" function family in order to delay setting these params
    // until after Ctrl construction
    g_osc->opti_set_P_tau(0.26741829 ); // Taken from master commit: "All_1 results, 1459 score"
	// HIP CONTROL
	g_osc->opti_set_P_theta_trunk( 0.07052866 ); // TODO: trunk lean 
	g_osc->opti_set_P_theta_hip( 0.03457139 ); // TODO: made its lower bound smaller, come back to this later
    
	// CPG CONTROL
    g_osc->opti_set_k_HFLrun1( 0.33726812);
    g_osc->opti_set_k_HFLrun2( 0.32053132);
    g_osc->opti_set_k_HAMrun( 0.48153332);

	// ANKLE CONTROL
	g_osc->opti_set_P_G_SOL( 0.05490775 );	// TODO: Original bounds
	g_osc->opti_set_P_G_SOL_TA( 0.23947017 );// Prevent tripping
	g_osc->opti_set_P_G_GAS( 0.56733306 );
}
